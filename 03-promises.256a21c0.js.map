{"mappings":"gfAAAA,EAAA,SACcC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACbD,SAASC,cAAc,yBAgB/BC,iBAAiB,SAAS,SAAAC,GAd3C,IAAuBC,EAAUC,EAe/BF,EAAEG,kBAfmBF,EAgBP,EAhBiBC,EAgBd,KAfD,IAAIE,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEJ,WAAUS,MAAAR,IAEpBI,EAAO,CAAEL,WAAUS,MAAAR,G,GAEpBA,E,KAQJS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUY,EAAKD,EAALF,MACjBI,QAAQC,IAAI,uBAAwCC,OAAff,EAAS,QAAYe,OAANH,EAAM,M,IAE3DI,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUiB,EAAKN,EAALF,MAClBI,QAAQC,IAAI,sBAAqCC,OAAff,EAAS,QAAYe,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault();\n  createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n);\n\n\n"],"names":["parcelRequire","document","querySelector","addEventListener","e","position","delay1","preventDefault","Promise","resolve","reject","setTimeout","Math","random","delay","then","param","delay2","console","log","concat","catch","delay3"],"version":3,"file":"03-promises.256a21c0.js.map"}