{"mappings":"oeAAAA,EAAA,SACcC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACbD,SAASC,cAAc,yBAgB/BC,iBAAiB,SAASC,IAd3C,IAAuBC,EAAUC,EAe/BF,EAAEG,kBAfmBF,EAgBP,EAhBiBC,EAgBd,KAfD,IAAIE,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEJ,EAAUS,MAAAR,IAEpBI,EAAO,C,SAAEL,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,KAQVS,MAAK,EAACV,SAAEA,EAAUS,MAAAE,MACjBC,QAAQC,IAAI,uBAAqBb,QAAiBW,MAAU,IAE7DG,OAAM,EAACd,SAAEA,EAAUS,MAAAM,MAClBH,QAAQC,IAAI,sBAAoBb,QAAee,MAAU,GACzD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault();\n  createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n);\n\n\n"],"names":["parcelRequire","document","querySelector","addEventListener","e","position","delay1","preventDefault","Promise","resolve","reject","setTimeout","Math","random","delay","then","delay2","console","log","catch","delay3"],"version":3,"file":"03-promises.3eff2e93.js.map"}